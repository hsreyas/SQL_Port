CREATE DATABASE COVID19;

USE COVID19;

SELECT * FROM  COVIDDEATHS
ORDER BY 3,4;

SELECT * FROM  COVIDVACCINATIONS
ORDER BY 3,4;

SELECT LOCATION,DATE,TOTAL_CASES,NEW_CASES,TOTAL_DEATHS,POPULATION
FROM COVIDDEATHS
ORDER BY 1,2;


-- SCALLING FOR IND AND US 
-- TOTAL POPULATION VS TOTAL DEATHS VIA DEATH PERCENT

SELECT LOCATION,DATE,POPULATION,TOTAL_CASES,(TOTAL_DEATHS/TOTAL_CASES * 100) AS DEATHPERCENT
FROM COVIDDEATHS
WHERE LOCATION LIKE '%STATES'
ORDER BY DEATHPERCENT;

-- PERCENT OF POPULATION INFECTED WITH COVID

SELECT LOCATION,DATE,POPULATION,TOTAL_CASES,(TOTAL_CASES/POPULATION * 100) AS POPULATIONPERCENT
FROM COVIDDEATHS
WHERE LOCATION LIKE '%INDIA'
ORDER BY POPULATIONPERCENT;

SELECT LOCATION,DATE,POPULATION,TOTAL_CASES,(TOTAL_CASES/POPULATION * 100) AS POPULATIONPERCENT
FROM COVIDDEATHS
WHERE LOCATION LIKE '%STATES'
ORDER BY POPULATIONPERCENT;

-- INFECTION RATE AS PER CASES AND POPULATION 

SELECT LOCATION,POPULATION,MAX(TOTAL_CASES) AS 'HIGHEST INFECTION COUNT',MAX((TOTAL_CASES/POPULATION)) * 100 AS 'INFECTION RATE'
FROM COVIDDEATHS
GROUP BY LOCATION, POPULATION
ORDER BY 'INFECTION RATE' DESC;

-- HIGHEST DEATH COUNTS

SELECT LOCATION, MAX(CAST(TOTAL_DEATHS AS INT)) AS TOTALDEATHCOUNT
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY LOCATION
ORDER BY TOTALDEATHCOUNT DESC;

-- CONTINENT WISE DEATH COUNT

SELECT CONTINENT, MAX(CAST(TOTAL_DEATHS AS INT)) AS TOTALDEATHCOUNT
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY CONTINENT
ORDER BY TOTALDEATHCOUNT DESC;

-- TOTAL DEATH CASES AROUND THE WORLD

SELECT SUM(NEW_CASES) AS TOTAL_CASES, SUM(CAST(NEW_DEATHS AS INT)) AS TOTAL_DEATHS, (SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)) * 100 AS DEATH_PERCENT
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
ORDER BY 1,2; 

-- DATE WISE DAILY DEATH PERCENT TOTAL CASES AND DEATHS AROUND THE WORLD
 
SELECT DATE,SUM(NEW_CASES) AS TOTAL_CASES, SUM(CAST(NEW_DEATHS AS INT)) AS TOTAL_DEATHS, (SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)) * 100 AS DEATH_PERCENT
FROM COVIDDEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY DATE
ORDER BY 1,2; 



-- SELECT * FROM COVIDVACCINATIONS;

-- LOOKING AT POPULATION THATS VACCINATED FROM THE TOTAL POPULATION

SELECT DEA.DATE,DEA.LOCATION,DEA.CONTINENT,DEA.POPULATION,VAC.NEW_VACCINATIONS
,SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as ROLLINGPEOPLEVACCINATED
FROM COVIDDEATHS DEA
JOIN COVIDVACCINATIONS VAC
ON DEA.LOCATION = VAC.LOCATION AND DEA.DATE = VAC.DATE
WHERE DEA.CONTINENT IS NOT NULL
ORDER BY 2,3;

-- USE CTE

WITH POPVSVAC (CONTINENT,LOCATION,DATE,POPULATION,NEW_VACCINATIONS,ROLLINGPEOPLEVACCINATED)
AS
(
SELECT DEA.CONTINENT,DEA.LOCATION,DEA.DATE,DEA.POPULATION,VAC.NEW_VACCINATIONS
,SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as ROLLINGPEOPLEVACCINATED
FROM COVIDDEATHS DEA
JOIN COVIDVACCINATIONS VAC
ON DEA.LOCATION = VAC.LOCATION AND DEA.DATE = VAC.DATE
WHERE DEA.CONTINENT IS NOT NULL
--ORDER BY 2,3
)
 
SELECT *, (ROLLINGPEOPLEVACCINATED/POPULATION) * 100 AS PEOPLE_VACCINATED
FROM POPVSVAC;


-- TEMP TABLE

DROP Table #PERC_POP_VACCINATED;

Create Table #PERC_POP_VACCINATED
(
CONTINENT NVARCHAR(255),
LOCATION NVARCHAR(255),
DATE DATETIME,
POPULATION NUMERIC,
NEW_VACCINATIONS NUMERIC,
ROLLINGPEOPLEVACCINATED NUMERIC
)
INSERT INTO #PERC_POP_VACCINATED
SELECT DEA.CONTINENT,DEA.LOCATION,DEA.DATE,DEA.POPULATION,VAC.NEW_VACCINATIONS
,SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as ROLLINGPEOPLEVACCINATED
FROM COVIDDEATHS DEA
JOIN COVIDVACCINATIONS VAC
ON DEA.LOCATION = VAC.LOCATION AND DEA.DATE = VAC.DATE
WHERE DEA.CONTINENT IS NOT NULL
--ORDER BY 2,3

Select *, (RollingPeopleVaccinated/Population)*100
From #PERC_POP_VACCINATED;

-- CREATING A VIEW FOR THE SAME

CREATE VIEW PERC_POP_VACCINATED AS
SELECT DEA.CONTINENT,DEA.LOCATION,DEA.DATE,DEA.POPULATION,VAC.NEW_VACCINATIONS
,SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as ROLLINGPEOPLEVACCINATED
FROM COVIDDEATHS DEA
JOIN COVIDVACCINATIONS VAC
ON DEA.LOCATION = VAC.LOCATION AND DEA.DATE = VAC.DATE
WHERE DEA.CONTINENT IS NOT NULL
	--ORDER BY 2,3

SELECT * FROM PERC_POP_VACCINATED;

